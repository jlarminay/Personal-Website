# - Build vue app
# - Zip built app
# - Upload zip
# - On remote:
#   - Delete all files
#   - Unzip zip

name: Deploy to Server

on: 
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build_app:
    name: Build App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.12.1'
      
      - name: Install dependencies
        run: yarn --frozen-lockfile
      
      - name: Build app
        run: yarn build

      - uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist
    
  check_files:
    name: Check files
    runs-on: ubuntu-latest
    needs: build_app
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@master
        with:
          name: dist
          path: dist
      
      - name: Upload Files to Remote
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASS }}
          port: 21
          local-dir: "./dist/"
          server-dir: "/public_html/"
          dry-run: false

  # upload-files-to-remote:
  #   name: Upload files
  #   needs: publish-images
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Upload Files to Remote
  #       uses: wangyucode/sftp-upload-action@v1.4.8
  #       with:
  #         host: ${{ secrets.SERVER_IP }}
  #         username: ${{ secrets.SERVER_USER }}
  #         password: ${{ secrets.SERVER_PASS }}
  #         localDir: "./.deployment"
  #         remoteDir: "/root"
  #         forceUpload: true
  #         dryRun: false
  
  # restart-docker:
  #   name: Run setup script
  #   needs: upload-files-to-remote
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Run docker-compose
  #     - uses: appleboy/ssh-action@master
  #       env:
  #         DOCKER_USER: ${{ secrets.DOCKER_USER }}
  #         DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
  #         VERSION: ${{ env.VERSION }}
  #       with:
  #         host: ${{ secrets.SERVER_IP }}
  #         username: ${{ secrets.SERVER_USER }}
  #         password: ${{ secrets.SERVER_PASS }}
  #         port: 22
  #         envs: DOCKER_USER, DOCKER_PASS, VERSION
  #         script: |
  #           export VERSION=$VERSION;
  #           cd /root;
  #           docker login --username $DOCKER_USER --password $DOCKER_PASS;
  #           yes | docker-compose -f docker-compose.prod.yml up -d;